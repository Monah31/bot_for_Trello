version: '2.2'

services:
  my_python_app:
    # Имя сервиса, которое вы можете использовать для обращения к контейнеру
    container_name: my_python_app

    # Путь к Dockerfile (предполагается, что он находится в текущей директории)
    build:
      context: .
      dockerfile: Dockerfile

    # Монтируем текущую директорию внутрь контейнера в /app
    # Это позволяет изменять код в хост-системе, и изменения будут автоматически отражаться в контейнере
    volumes:
      - .:/app

    # Указываем рабочую директорию внутри контейнера
    working_dir: /app

    # Команда, которая будет выполняться при запуске контейнера
    command: ["python", "main.py"]

    # Опционально: порт, который можно использовать для доступа к приложению извне контейнера
    # Здесь предполагается, что ваше приложение слушает на порту 8000 внутри контейнера
    ports:
      - "8000:8000"

    # Опционально: окружение для настройки переменных среды внутри контейнера
    environment:
      - ENV_VARIABLE=value

    # Опционально: зависимости от других сервисов
    # Если ваше приложение зависит от базы данных, кэша и т.д., вы можете указать их здесь
    # Например:
    # depends_on:
    #   - db

    # Опционально: задаем параметры для рестартов контейнера (always, on-failure, unless-stopped)
    restart: always
